# We build for x86_64 because the Python UI's CI still runs on x86_64 and we
# need to produce the library for that.
#
# We build for ARM only to sanity-check the build, so that we don't get caught
# out by arch-dependent features like atomics that might be missing on ARM.
# The resulting library can't be used owing to compiler snags; see Cargo.toml.
before_install:
  # Some Rust libraries call out to libc6.
  - sudo apt-get install -y gcc-arm-linux-gnueabihf libc6-dev-armhf-cross
language: rust
rust:
  - 1.34.2
cache: cargo
script:
  # This is what we'll soon deploy and use in UI CI.
  - cargo build --verbose --release
  # Sanity-check only, no useful artefact.
  - rustup target add --toolchain 1.34.2 arm-unknown-linux-gnueabihf
  - RUSTFLAGS="-C linker=arm-linux-gnueabihf-gcc -C link-arg=-s" cargo build --verbose --release --target arm-unknown-linux-gnueabihf

deploy:
  provider: releases # Github releases, that is
  api_key:  # Produced with the Travis Ruby gem.
    secure: ZyenTygyNnsEMMOW/8AjrgBT/MrtsRGTr3V9rEt4ys2nRL2RoVOzzOfscELiCLRqAdd9O4Y/IlSa8eRxi1JGO7IG3OXVTTTOZb/c7e0iEtUrMgWNuBG0hiCBPJfglH5GQK17NumQTg4hSg+MAwpjs5OAxloGV1xvtMfOniWW01okPwMKp7cVMmnlrYsjTzhjqBXQuWkCmLNGx1MHSyukgf15qlBXK32zdcGSNTot7HA+D2zRjXPlFWKCefAmAvc86FoGLmS3YRUDsxdUI+IsYMcrXrd7UwgmkWwa9yuGcOG5eTUpSXZV1te5HuS0R64jP4/0/GFTiGUFRqUOAjjYMwEl32R99AiB8wdNh4g8rU/3z7NJjuUToVwUQWAz9jCkHbhqefFXPh+oQJdTaVQonu8ghrwuHoOuj55MBlEp5HyIBVqrEv67gYIjm37HXefG1TkrWMxkBEAW2YRmzQwtmiJs3McRyN/w+AjHfaSpVIv+ZFLdvrTC3j6gbh3S+/gKLgL5uDAdGuIUF8/cXGUNbR3QHQm+ljmkqxlsRhmUU+TdXNi6Bl/QGirT2ooVJ3mzeAIDtSZ5eCdKsyGaD9fFCwlB3VmNHvy26XEXdnjunMMmPNY4+dk+Rz73Nd0iFT7tSH6zihrJEOulcwXyMHQWa4YHnObHoVdIEfrxOEunqy0=
  file: target/release/libbookindex.so
  skip_cleanup: true
  on:
    repo: Bristol-Braille/canute-ui-rust
    branch: master
    tags: true # Github requires tags for anything but draft releases
